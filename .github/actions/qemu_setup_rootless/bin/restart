#!/bin/bash

SCRIPT_DIR="$(dirname -- "$( readlink -f -- "$0"; )")"

# Parse options
NO_KILL=false
while [[ $# -gt 0 ]]; do
    case $1 in
        --no-kill)
            NO_KILL=true
            shift
            ;;
        -*)
            echo "Unknown option: $1" >&2
            exit 1
            ;;
        *)
            break
            ;;
    esac
done

if [ $# -ne 2 ]; then
    echo "Usage: qemu_restart [--no-kill] <stop_timeout_seconds> <start_timeout_seconds>" >&2
    exit 1
fi

QEMU_PID=$(cat "$SCRIPT_DIR/pid")

SCRIPT_DIR="$(dirname "$0")"
STOP_TIMEOUT=$1
START_TIMEOUT=$2

if [ "$NO_KILL" = true ]; then
    echo "Restarting QEMU, PID: $QEMU_PID (no-kill mode, stop timeout: ${STOP_TIMEOUT}s, start timeout: ${START_TIMEOUT}s)..."
else
    echo "Restarting QEMU, PID: $QEMU_PID (stop timeout: ${STOP_TIMEOUT}s, start timeout: ${START_TIMEOUT}s)..."
    # Send SIGTERM to QEMU process
    kill -s SIGTERM $QEMU_PID
fi

# Wait for current QEMU process to stop
if "$SCRIPT_DIR/wait_for_exit" "$STOP_TIMEOUT"; then
    echo "QEMU stopped, starting new instance..."
    "$SCRIPT_DIR/start"
    if "$SCRIPT_DIR/wait_for_ssh" "$START_TIMEOUT"; then
        echo "QEMU restarted"
    else
        echo "QEMU did not start in time"
        exit 1
    fi
else
    echo "QEMU did not stop in time"
    exit 1
fi